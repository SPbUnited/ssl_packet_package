// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ci/ssl_gc_ci.proto

#include "ci/ssl_gc_ci.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR CiInput::CiInput(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.api_inputs_)*/{}
  , /*decltype(_impl_.tracker_packet_)*/nullptr
  , /*decltype(_impl_.geometry_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}} {}
struct CiInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CiInputDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CiInputDefaultTypeInternal() {}
  union {
    CiInput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CiInputDefaultTypeInternal _CiInput_default_instance_;
PROTOBUF_CONSTEXPR CiOutput::CiOutput(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.referee_msg_)*/nullptr} {}
struct CiOutputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CiOutputDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CiOutputDefaultTypeInternal() {}
  union {
    CiOutput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CiOutputDefaultTypeInternal _CiOutput_default_instance_;
static ::_pb::Metadata file_level_metadata_ci_2fssl_5fgc_5fci_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ci_2fssl_5fgc_5fci_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ci_2fssl_5fgc_5fci_2eproto = nullptr;

const uint32_t TableStruct_ci_2fssl_5fgc_5fci_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CiInput, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CiInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CiInput, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::CiInput, _impl_.tracker_packet_),
  PROTOBUF_FIELD_OFFSET(::CiInput, _impl_.api_inputs_),
  PROTOBUF_FIELD_OFFSET(::CiInput, _impl_.geometry_),
  2,
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::CiOutput, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CiOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CiOutput, _impl_.referee_msg_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::CiInput)},
  { 14, 21, -1, sizeof(::CiOutput)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_CiInput_default_instance_._instance,
  &::_CiOutput_default_instance_._instance,
};

const char descriptor_table_protodef_ci_2fssl_5fgc_5fci_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022ci/ssl_gc_ci.proto\032(tracker/ssl_vision"
  "_wrapper_tracked.proto\032\024api/ssl_gc_api.p"
  "roto\032\"state/ssl_gc_referee_message.proto"
  "\032 vision/ssl_vision_geometry.proto\"\214\001\n\007C"
  "iInput\022\021\n\ttimestamp\030\001 \001(\003\022-\n\016tracker_pac"
  "ket\030\002 \001(\0132\025.TrackerWrapperPacket\022\032\n\napi_"
  "inputs\030\003 \003(\0132\006.Input\022#\n\010geometry\030\004 \001(\0132\021"
  ".SSL_GeometryData\")\n\010CiOutput\022\035\n\013referee"
  "_msg\030\001 \001(\0132\010.Referee"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ci_2fssl_5fgc_5fci_2eproto_deps[4] = {
  &::descriptor_table_api_2fssl_5fgc_5fapi_2eproto,
  &::descriptor_table_state_2fssl_5fgc_5freferee_5fmessage_2eproto,
  &::descriptor_table_tracker_2fssl_5fvision_5fwrapper_5ftracked_2eproto,
  &::descriptor_table_vision_2fssl_5fvision_5fgeometry_2eproto,
};
static ::_pbi::once_flag descriptor_table_ci_2fssl_5fgc_5fci_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ci_2fssl_5fgc_5fci_2eproto = {
    false, false, 340, descriptor_table_protodef_ci_2fssl_5fgc_5fci_2eproto,
    "ci/ssl_gc_ci.proto",
    &descriptor_table_ci_2fssl_5fgc_5fci_2eproto_once, descriptor_table_ci_2fssl_5fgc_5fci_2eproto_deps, 4, 2,
    schemas, file_default_instances, TableStruct_ci_2fssl_5fgc_5fci_2eproto::offsets,
    file_level_metadata_ci_2fssl_5fgc_5fci_2eproto, file_level_enum_descriptors_ci_2fssl_5fgc_5fci_2eproto,
    file_level_service_descriptors_ci_2fssl_5fgc_5fci_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ci_2fssl_5fgc_5fci_2eproto_getter() {
  return &descriptor_table_ci_2fssl_5fgc_5fci_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ci_2fssl_5fgc_5fci_2eproto(&descriptor_table_ci_2fssl_5fgc_5fci_2eproto);

// ===================================================================

class CiInput::_Internal {
 public:
  using HasBits = decltype(std::declval<CiInput>()._impl_._has_bits_);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TrackerWrapperPacket& tracker_packet(const CiInput* msg);
  static void set_has_tracker_packet(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::SSL_GeometryData& geometry(const CiInput* msg);
  static void set_has_geometry(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TrackerWrapperPacket&
CiInput::_Internal::tracker_packet(const CiInput* msg) {
  return *msg->_impl_.tracker_packet_;
}
const ::SSL_GeometryData&
CiInput::_Internal::geometry(const CiInput* msg) {
  return *msg->_impl_.geometry_;
}
void CiInput::clear_tracker_packet() {
  if (_impl_.tracker_packet_ != nullptr) _impl_.tracker_packet_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CiInput::clear_api_inputs() {
  _impl_.api_inputs_.Clear();
}
void CiInput::clear_geometry() {
  if (_impl_.geometry_ != nullptr) _impl_.geometry_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CiInput::CiInput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CiInput)
}
CiInput::CiInput(const CiInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CiInput* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.api_inputs_){from._impl_.api_inputs_}
    , decltype(_impl_.tracker_packet_){nullptr}
    , decltype(_impl_.geometry_){nullptr}
    , decltype(_impl_.timestamp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tracker_packet()) {
    _this->_impl_.tracker_packet_ = new ::TrackerWrapperPacket(*from._impl_.tracker_packet_);
  }
  if (from._internal_has_geometry()) {
    _this->_impl_.geometry_ = new ::SSL_GeometryData(*from._impl_.geometry_);
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:CiInput)
}

inline void CiInput::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.api_inputs_){arena}
    , decltype(_impl_.tracker_packet_){nullptr}
    , decltype(_impl_.geometry_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
  };
}

CiInput::~CiInput() {
  // @@protoc_insertion_point(destructor:CiInput)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CiInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.api_inputs_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.tracker_packet_;
  if (this != internal_default_instance()) delete _impl_.geometry_;
}

void CiInput::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CiInput::Clear() {
// @@protoc_insertion_point(message_clear_start:CiInput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.api_inputs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.tracker_packet_ != nullptr);
      _impl_.tracker_packet_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.geometry_ != nullptr);
      _impl_.geometry_->Clear();
    }
  }
  _impl_.timestamp_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CiInput::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_timestamp(&has_bits);
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TrackerWrapperPacket tracker_packet = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_tracker_packet(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Input api_inputs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_api_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .SSL_GeometryData geometry = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_geometry(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CiInput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CiInput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 timestamp = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // optional .TrackerWrapperPacket tracker_packet = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::tracker_packet(this),
        _Internal::tracker_packet(this).GetCachedSize(), target, stream);
  }

  // repeated .Input api_inputs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_api_inputs_size()); i < n; i++) {
    const auto& repfield = this->_internal_api_inputs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .SSL_GeometryData geometry = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::geometry(this),
        _Internal::geometry(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CiInput)
  return target;
}

size_t CiInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CiInput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Input api_inputs = 3;
  total_size += 1UL * this->_internal_api_inputs_size();
  for (const auto& msg : this->_impl_.api_inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .TrackerWrapperPacket tracker_packet = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tracker_packet_);
    }

    // optional .SSL_GeometryData geometry = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.geometry_);
    }

    // optional int64 timestamp = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CiInput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CiInput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CiInput::GetClassData() const { return &_class_data_; }


void CiInput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CiInput*>(&to_msg);
  auto& from = static_cast<const CiInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CiInput)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.api_inputs_.MergeFrom(from._impl_.api_inputs_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_tracker_packet()->::TrackerWrapperPacket::MergeFrom(
          from._internal_tracker_packet());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_geometry()->::SSL_GeometryData::MergeFrom(
          from._internal_geometry());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CiInput::CopyFrom(const CiInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CiInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CiInput::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.api_inputs_))
    return false;
  if (_internal_has_tracker_packet()) {
    if (!_impl_.tracker_packet_->IsInitialized()) return false;
  }
  if (_internal_has_geometry()) {
    if (!_impl_.geometry_->IsInitialized()) return false;
  }
  return true;
}

void CiInput::InternalSwap(CiInput* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.api_inputs_.InternalSwap(&other->_impl_.api_inputs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CiInput, _impl_.timestamp_)
      + sizeof(CiInput::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(CiInput, _impl_.tracker_packet_)>(
          reinterpret_cast<char*>(&_impl_.tracker_packet_),
          reinterpret_cast<char*>(&other->_impl_.tracker_packet_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CiInput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ci_2fssl_5fgc_5fci_2eproto_getter, &descriptor_table_ci_2fssl_5fgc_5fci_2eproto_once,
      file_level_metadata_ci_2fssl_5fgc_5fci_2eproto[0]);
}

// ===================================================================

class CiOutput::_Internal {
 public:
  using HasBits = decltype(std::declval<CiOutput>()._impl_._has_bits_);
  static const ::Referee& referee_msg(const CiOutput* msg);
  static void set_has_referee_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Referee&
CiOutput::_Internal::referee_msg(const CiOutput* msg) {
  return *msg->_impl_.referee_msg_;
}
void CiOutput::clear_referee_msg() {
  if (_impl_.referee_msg_ != nullptr) _impl_.referee_msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CiOutput::CiOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CiOutput)
}
CiOutput::CiOutput(const CiOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CiOutput* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.referee_msg_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_referee_msg()) {
    _this->_impl_.referee_msg_ = new ::Referee(*from._impl_.referee_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:CiOutput)
}

inline void CiOutput::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.referee_msg_){nullptr}
  };
}

CiOutput::~CiOutput() {
  // @@protoc_insertion_point(destructor:CiOutput)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CiOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.referee_msg_;
}

void CiOutput::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CiOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:CiOutput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.referee_msg_ != nullptr);
    _impl_.referee_msg_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CiOutput::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .Referee referee_msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_referee_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CiOutput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CiOutput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .Referee referee_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::referee_msg(this),
        _Internal::referee_msg(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CiOutput)
  return target;
}

size_t CiOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CiOutput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Referee referee_msg = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.referee_msg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CiOutput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CiOutput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CiOutput::GetClassData() const { return &_class_data_; }


void CiOutput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CiOutput*>(&to_msg);
  auto& from = static_cast<const CiOutput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CiOutput)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_referee_msg()) {
    _this->_internal_mutable_referee_msg()->::Referee::MergeFrom(
        from._internal_referee_msg());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CiOutput::CopyFrom(const CiOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CiOutput::IsInitialized() const {
  if (_internal_has_referee_msg()) {
    if (!_impl_.referee_msg_->IsInitialized()) return false;
  }
  return true;
}

void CiOutput::InternalSwap(CiOutput* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.referee_msg_, other->_impl_.referee_msg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CiOutput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ci_2fssl_5fgc_5fci_2eproto_getter, &descriptor_table_ci_2fssl_5fgc_5fci_2eproto_once,
      file_level_metadata_ci_2fssl_5fgc_5fci_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CiInput*
Arena::CreateMaybeMessage< ::CiInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CiInput >(arena);
}
template<> PROTOBUF_NOINLINE ::CiOutput*
Arena::CreateMaybeMessage< ::CiOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CiOutput >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
