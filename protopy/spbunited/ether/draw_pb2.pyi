"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class DrawCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LayersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> global___Layer:
            ...

        def __init__(self, *, key: builtins.str=..., value: global___Layer | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    LAYERS_FIELD_NUMBER: builtins.int

    @property
    def layers(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Layer]:
        """Map of layer names (e.g., "draw_test") to their content"""

    def __init__(self, *, layers: collections.abc.Mapping[builtins.str, global___Layer] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['layers', b'layers']) -> None:
        ...
global___DrawCommand = DrawCommand

@typing.final
class Layer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    IS_VISIBLE_FIELD_NUMBER: builtins.int
    is_visible: builtins.bool
    'Visibility flag for the layer'

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DrawObject]:
        """List of draw objects"""

    def __init__(self, *, data: collections.abc.Iterable[global___DrawObject] | None=..., is_visible: builtins.bool=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['data', b'data', 'is_visible', b'is_visible']) -> None:
        ...
global___Layer = Layer

@typing.final
class DrawObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROBOT_YEL_FIELD_NUMBER: builtins.int
    ROBOT_BLU_FIELD_NUMBER: builtins.int
    BALL_FIELD_NUMBER: builtins.int
    LINE_FIELD_NUMBER: builtins.int
    ARROW_FIELD_NUMBER: builtins.int
    POLYGON_FIELD_NUMBER: builtins.int
    RECT_FIELD_NUMBER: builtins.int
    CIRCLE_FIELD_NUMBER: builtins.int

    @property
    def robot_yel(self) -> global___RobotYel:
        ...

    @property
    def robot_blu(self) -> global___RobotBlu:
        ...

    @property
    def ball(self) -> global___Ball:
        ...

    @property
    def line(self) -> global___Line:
        ...

    @property
    def arrow(self) -> global___Arrow:
        ...

    @property
    def polygon(self) -> global___Polygon:
        ...

    @property
    def rect(self) -> global___Rect:
        ...

    @property
    def circle(self) -> global___Circle:
        ...

    def __init__(self, *, robot_yel: global___RobotYel | None=..., robot_blu: global___RobotBlu | None=..., ball: global___Ball | None=..., line: global___Line | None=..., arrow: global___Arrow | None=..., polygon: global___Polygon | None=..., rect: global___Rect | None=..., circle: global___Circle | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['arrow', b'arrow', 'ball', b'ball', 'circle', b'circle', 'line', b'line', 'object', b'object', 'polygon', b'polygon', 'rect', b'rect', 'robot_blu', b'robot_blu', 'robot_yel', b'robot_yel']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['arrow', b'arrow', 'ball', b'ball', 'circle', b'circle', 'line', b'line', 'object', b'object', 'polygon', b'polygon', 'rect', b'rect', 'robot_blu', b'robot_blu', 'robot_yel', b'robot_yel']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['object', b'object']) -> typing.Literal['robot_yel', 'robot_blu', 'ball', 'line', 'arrow', 'polygon', 'rect', 'circle'] | None:
        ...
global___DrawObject = DrawObject

@typing.final
class RobotYel(google.protobuf.message.Message):
    """--------------------------
    Object type definitions
    --------------------------

    Both robots share the same structure but have different types
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    rotation: builtins.float

    def __init__(self, *, x: builtins.float=..., y: builtins.float=..., rotation: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['rotation', b'rotation', 'x', b'x', 'y', b'y']) -> None:
        ...
global___RobotYel = RobotYel

@typing.final
class RobotBlu(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    rotation: builtins.float

    def __init__(self, *, x: builtins.float=..., y: builtins.float=..., rotation: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['rotation', b'rotation', 'x', b'x', 'y', b'y']) -> None:
        ...
global___RobotBlu = RobotBlu

@typing.final
class Ball(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float

    def __init__(self, *, x: builtins.float=..., y: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['x', b'x', 'y', b'y']) -> None:
        ...
global___Ball = Ball

@typing.final
class Line(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_LIST_FIELD_NUMBER: builtins.int
    Y_LIST_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    color: builtins.str
    'Hex color code'
    width: builtins.float

    @property
    def x_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """List of x-coordinates"""

    @property
    def y_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """List of y-coordinates"""

    def __init__(self, *, x_list: collections.abc.Iterable[builtins.float] | None=..., y_list: collections.abc.Iterable[builtins.float] | None=..., color: builtins.str=..., width: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['color', b'color', 'width', b'width', 'x_list', b'x_list', 'y_list', b'y_list']) -> None:
        ...
global___Line = Line

@typing.final
class Arrow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    DX_FIELD_NUMBER: builtins.int
    DY_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    x: builtins.float
    'Start position'
    y: builtins.float
    dx: builtins.float
    'Direction vector'
    dy: builtins.float
    color: builtins.str
    width: builtins.float

    def __init__(self, *, x: builtins.float=..., y: builtins.float=..., dx: builtins.float=..., dy: builtins.float=..., color: builtins.str=..., width: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['color', b'color', 'dx', b'dx', 'dy', b'dy', 'width', b'width', 'x', b'x', 'y', b'y']) -> None:
        ...
global___Arrow = Arrow

@typing.final
class Polygon(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_LIST_FIELD_NUMBER: builtins.int
    Y_LIST_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    color: builtins.str
    width: builtins.float

    @property
    def x_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        ...

    @property
    def y_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        ...

    def __init__(self, *, x_list: collections.abc.Iterable[builtins.float] | None=..., y_list: collections.abc.Iterable[builtins.float] | None=..., color: builtins.str=..., width: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['color', b'color', 'width', b'width', 'x_list', b'x_list', 'y_list', b'y_list']) -> None:
        ...
global___Polygon = Polygon

@typing.final
class Rect(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    width: builtins.float
    height: builtins.float
    color: builtins.str

    def __init__(self, *, x: builtins.float=..., y: builtins.float=..., width: builtins.float=..., height: builtins.float=..., color: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['color', b'color', 'height', b'height', 'width', b'width', 'x', b'x', 'y', b'y']) -> None:
        ...
global___Rect = Rect

@typing.final
class Circle(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    RADIUS_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    radius: builtins.float
    color: builtins.str

    def __init__(self, *, x: builtins.float=..., y: builtins.float=..., radius: builtins.float=..., color: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['color', b'color', 'radius', b'radius', 'x', b'x', 'y', b'y']) -> None:
        ...
global___Circle = Circle