"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RobotControlType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RobotControlTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RobotControlType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    OLD_FORMAT: _RobotControlType.ValueType
    KICKER_AND_DRIBBLER: _RobotControlType.ValueType
    SPEED_CONTROL: _RobotControlType.ValueType
    COORDINATE_CONTROL: _RobotControlType.ValueType
    GLOBAL_COORDINATES: _RobotControlType.ValueType

class RobotControlType(_RobotControlType, metaclass=_RobotControlTypeEnumTypeWrapper):
    ...
OLD_FORMAT: RobotControlType.ValueType
KICKER_AND_DRIBBLER: RobotControlType.ValueType
SPEED_CONTROL: RobotControlType.ValueType
COORDINATE_CONTROL: RobotControlType.ValueType
GLOBAL_COORDINATES: RobotControlType.ValueType
global___RobotControlType = RobotControlType

class _KickerMode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _KickerModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_KickerMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    IDLE: _KickerMode.ValueType
    KICK_STRAIGHT: _KickerMode.ValueType
    KICK_HIGH: _KickerMode.ValueType
    AUTOKICK_STRAIGHT: _KickerMode.ValueType
    AUTOKICK_HIGH: _KickerMode.ValueType

class KickerMode(_KickerMode, metaclass=_KickerModeEnumTypeWrapper):
    ...
IDLE: KickerMode.ValueType
KICK_STRAIGHT: KickerMode.ValueType
KICK_HIGH: KickerMode.ValueType
AUTOKICK_STRAIGHT: KickerMode.ValueType
AUTOKICK_HIGH: KickerMode.ValueType
global___KickerMode = KickerMode

@typing.final
class OldFormat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VEL_X_FIELD_NUMBER: builtins.int
    VEL_Y_FIELD_NUMBER: builtins.int
    ANGULAR_VELOCITY_OR_DELTA_ANGLE_FIELD_NUMBER: builtins.int
    KICKER_SETTING_FIELD_NUMBER: builtins.int
    DRIBBLER_SETTING_FIELD_NUMBER: builtins.int
    AUTOKICK_STRAIGHT_FIELD_NUMBER: builtins.int
    AUTOKICK_HIGH_FIELD_NUMBER: builtins.int
    KICK_STRAIGHT_FIELD_NUMBER: builtins.int
    KICK_HIGH_FIELD_NUMBER: builtins.int
    ANGVEL_ANGLE_TOGGLE_FIELD_NUMBER: builtins.int
    DRIBBLER_IS_ENABLED_FIELD_NUMBER: builtins.int
    HIGH_VOLTAGE_FIELD_NUMBER: builtins.int
    vel_x: builtins.int
    vel_y: builtins.int
    angular_velocity_or_delta_angle: builtins.int
    kicker_setting: builtins.int
    dribbler_setting: builtins.int
    autokick_straight: builtins.bool
    autokick_high: builtins.bool
    kick_straight: builtins.bool
    kick_high: builtins.bool
    angvel_angle_toggle: builtins.bool
    dribbler_is_enabled: builtins.bool
    high_voltage: builtins.bool

    def __init__(self, *, vel_x: builtins.int | None=..., vel_y: builtins.int | None=..., angular_velocity_or_delta_angle: builtins.int | None=..., kicker_setting: builtins.int | None=..., dribbler_setting: builtins.int | None=..., autokick_straight: builtins.bool | None=..., autokick_high: builtins.bool | None=..., kick_straight: builtins.bool | None=..., kick_high: builtins.bool | None=..., angvel_angle_toggle: builtins.bool | None=..., dribbler_is_enabled: builtins.bool | None=..., high_voltage: builtins.bool | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['angular_velocity_or_delta_angle', b'angular_velocity_or_delta_angle', 'angvel_angle_toggle', b'angvel_angle_toggle', 'autokick_high', b'autokick_high', 'autokick_straight', b'autokick_straight', 'dribbler_is_enabled', b'dribbler_is_enabled', 'dribbler_setting', b'dribbler_setting', 'high_voltage', b'high_voltage', 'kick_high', b'kick_high', 'kick_straight', b'kick_straight', 'kicker_setting', b'kicker_setting', 'vel_x', b'vel_x', 'vel_y', b'vel_y']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['angular_velocity_or_delta_angle', b'angular_velocity_or_delta_angle', 'angvel_angle_toggle', b'angvel_angle_toggle', 'autokick_high', b'autokick_high', 'autokick_straight', b'autokick_straight', 'dribbler_is_enabled', b'dribbler_is_enabled', 'dribbler_setting', b'dribbler_setting', 'high_voltage', b'high_voltage', 'kick_high', b'kick_high', 'kick_straight', b'kick_straight', 'kicker_setting', b'kicker_setting', 'vel_x', b'vel_x', 'vel_y', b'vel_y']) -> None:
        ...
global___OldFormat = OldFormat

@typing.final
class KickerAndDribbler(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KICKER_MODE_FIELD_NUMBER: builtins.int
    KICKER_SETTING_FIELD_NUMBER: builtins.int
    DRIBBLER_SETTING_FIELD_NUMBER: builtins.int
    kicker_mode: global___KickerMode.ValueType
    kicker_setting: builtins.int
    dribbler_setting: builtins.int

    def __init__(self, *, kicker_mode: global___KickerMode.ValueType | None=..., kicker_setting: builtins.int | None=..., dribbler_setting: builtins.int | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['dribbler_setting', b'dribbler_setting', 'kicker_mode', b'kicker_mode', 'kicker_setting', b'kicker_setting']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['dribbler_setting', b'dribbler_setting', 'kicker_mode', b'kicker_mode', 'kicker_setting', b'kicker_setting']) -> None:
        ...
global___KickerAndDribbler = KickerAndDribbler

@typing.final
class SpeedControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VEL_X_FIELD_NUMBER: builtins.int
    VEL_Y_FIELD_NUMBER: builtins.int
    ANGULAR_VELOCITY_FIELD_NUMBER: builtins.int
    DELTA_ANGLE_FIELD_NUMBER: builtins.int
    vel_x: builtins.float
    '[m/s]'
    vel_y: builtins.float
    '[m/s]'
    angular_velocity: builtins.float
    '[rad/s]'
    delta_angle: builtins.float
    '[rad]'

    def __init__(self, *, vel_x: builtins.float | None=..., vel_y: builtins.float | None=..., angular_velocity: builtins.float | None=..., delta_angle: builtins.float | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['angular_velocity', b'angular_velocity', 'angular_velocity_or_angle', b'angular_velocity_or_angle', 'delta_angle', b'delta_angle', 'vel_x', b'vel_x', 'vel_y', b'vel_y']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['angular_velocity', b'angular_velocity', 'angular_velocity_or_angle', b'angular_velocity_or_angle', 'delta_angle', b'delta_angle', 'vel_x', b'vel_x', 'vel_y', b'vel_y']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['angular_velocity_or_angle', b'angular_velocity_or_angle']) -> typing.Literal['angular_velocity', 'delta_angle'] | None:
        ...
global___SpeedControl = SpeedControl

@typing.final
class Target(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    VX_FIELD_NUMBER: builtins.int
    VY_FIELD_NUMBER: builtins.int
    ANGLE_FIELD_NUMBER: builtins.int
    id: builtins.int
    x: builtins.float
    '[m]'
    y: builtins.float
    '[m]'
    vx: builtins.float
    '[m/s]'
    vy: builtins.float
    '[m/s]'
    angle: builtins.float
    '[rad]'

    def __init__(self, *, id: builtins.int | None=..., x: builtins.float | None=..., y: builtins.float | None=..., vx: builtins.float | None=..., vy: builtins.float | None=..., angle: builtins.float | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['angle', b'angle', 'id', b'id', 'vx', b'vx', 'vy', b'vy', 'x', b'x', 'y', b'y']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['angle', b'angle', 'id', b'id', 'vx', b'vx', 'vy', b'vy', 'x', b'x', 'y', b'y']) -> None:
        ...
global___Target = Target

@typing.final
class CoordinateControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TARGETS_FIELD_NUMBER: builtins.int

    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Target]:
        ...

    def __init__(self, *, targets: collections.abc.Iterable[global___Target] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['targets', b'targets']) -> None:
        ...
global___CoordinateControl = CoordinateControl

@typing.final
class GlobalCoordinates(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    ANGLE_FIELD_NUMBER: builtins.int
    x: builtins.float
    '[m]'
    y: builtins.float
    '[m]'
    angle: builtins.float
    '[rad]'

    def __init__(self, *, x: builtins.float | None=..., y: builtins.float | None=..., angle: builtins.float | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['angle', b'angle', 'x', b'x', 'y', b'y']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['angle', b'angle', 'x', b'x', 'y', b'y']) -> None:
        ...
global___GlobalCoordinates = GlobalCoordinates

@typing.final
class RobotCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROBOT_ID_FIELD_NUMBER: builtins.int
    OLD_FORMAT_FIELD_NUMBER: builtins.int
    KICKER_AND_DRIBBLER_FIELD_NUMBER: builtins.int
    SPEED_CONTROL_FIELD_NUMBER: builtins.int
    COORDINATE_CONTROL_FIELD_NUMBER: builtins.int
    GLOBAL_COORDINATES_FIELD_NUMBER: builtins.int
    robot_id: builtins.int
    'optional so that it always prints when id is 0\n    https://stackoverflow.com/questions/47373976/why-is-my-protobuf-message-in-python-ignoring-zero-values\n    '

    @property
    def old_format(self) -> global___OldFormat:
        ...

    @property
    def kicker_and_dribbler(self) -> global___KickerAndDribbler:
        ...

    @property
    def speed_control(self) -> global___SpeedControl:
        ...

    @property
    def coordinate_control(self) -> global___CoordinateControl:
        ...

    @property
    def global_coordinates(self) -> global___GlobalCoordinates:
        ...

    def __init__(self, *, robot_id: builtins.int | None=..., old_format: global___OldFormat | None=..., kicker_and_dribbler: global___KickerAndDribbler | None=..., speed_control: global___SpeedControl | None=..., coordinate_control: global___CoordinateControl | None=..., global_coordinates: global___GlobalCoordinates | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['control', b'control', 'coordinate_control', b'coordinate_control', 'global_coordinates', b'global_coordinates', 'kicker_and_dribbler', b'kicker_and_dribbler', 'old_format', b'old_format', 'robot_id', b'robot_id', 'speed_control', b'speed_control']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['control', b'control', 'coordinate_control', b'coordinate_control', 'global_coordinates', b'global_coordinates', 'kicker_and_dribbler', b'kicker_and_dribbler', 'old_format', b'old_format', 'robot_id', b'robot_id', 'speed_control', b'speed_control']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['control', b'control']) -> typing.Literal['old_format', 'kicker_and_dribbler', 'speed_control', 'coordinate_control', 'global_coordinates'] | None:
        ...
global___RobotCommand = RobotCommand