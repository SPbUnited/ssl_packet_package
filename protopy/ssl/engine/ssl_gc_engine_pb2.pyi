"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
from .. import geom
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
from .. import state
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GcState(google.protobuf.message.Message):
    """The GC state contains settings and state independent of the match state"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class TeamStateEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> global___GcStateTeam:
            ...

        def __init__(self, *, key: builtins.str | None=..., value: global___GcStateTeam | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> None:
            ...

    @typing.final
    class AutoRefStateEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> global___GcStateAutoRef:
            ...

        def __init__(self, *, key: builtins.str | None=..., value: global___GcStateAutoRef | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> None:
            ...

    @typing.final
    class TrackersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str

        def __init__(self, *, key: builtins.str | None=..., value: builtins.str | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    TEAM_STATE_FIELD_NUMBER: builtins.int
    AUTO_REF_STATE_FIELD_NUMBER: builtins.int
    TRACKERS_FIELD_NUMBER: builtins.int
    CONTINUE_ACTIONS_FIELD_NUMBER: builtins.int
    CONTINUE_HINTS_FIELD_NUMBER: builtins.int

    @property
    def team_state(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___GcStateTeam]:
        """the state of each team"""

    @property
    def auto_ref_state(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___GcStateAutoRef]:
        """the states of the auto referees"""

    @property
    def trackers(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """the attached trackers (uuid -> source_name)"""

    @property
    def continue_actions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContinueAction]:
        """the next actions that can be executed when continuing"""

    @property
    def continue_hints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContinueHint]:
        """the next actions that can be executed when continuing"""

    def __init__(self, *, team_state: collections.abc.Mapping[builtins.str, global___GcStateTeam] | None=..., auto_ref_state: collections.abc.Mapping[builtins.str, global___GcStateAutoRef] | None=..., trackers: collections.abc.Mapping[builtins.str, builtins.str] | None=..., continue_actions: collections.abc.Iterable[global___ContinueAction] | None=..., continue_hints: collections.abc.Iterable[global___ContinueHint] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['auto_ref_state', b'auto_ref_state', 'continue_actions', b'continue_actions', 'continue_hints', b'continue_hints', 'team_state', b'team_state', 'trackers', b'trackers']) -> None:
        ...
global___GcState = GcState

@typing.final
class GcStateTeam(google.protobuf.message.Message):
    """The GC state for a single team"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONNECTED_FIELD_NUMBER: builtins.int
    CONNECTION_VERIFIED_FIELD_NUMBER: builtins.int
    REMOTE_CONTROL_CONNECTED_FIELD_NUMBER: builtins.int
    REMOTE_CONTROL_CONNECTION_VERIFIED_FIELD_NUMBER: builtins.int
    ADVANTAGE_CHOICE_FIELD_NUMBER: builtins.int
    connected: builtins.bool
    'true: The team is connected'
    connection_verified: builtins.bool
    'true: The team connected via TLS with a verified certificate'
    remote_control_connected: builtins.bool
    'true: The remote control for the team is connected'
    remote_control_connection_verified: builtins.bool
    'true: The remote control for the team connected via TLS with a verified certificate'

    @property
    def advantage_choice(self) -> global___TeamAdvantageChoice:
        """the advantage choice of the team"""

    def __init__(self, *, connected: builtins.bool | None=..., connection_verified: builtins.bool | None=..., remote_control_connected: builtins.bool | None=..., remote_control_connection_verified: builtins.bool | None=..., advantage_choice: global___TeamAdvantageChoice | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['advantage_choice', b'advantage_choice', 'connected', b'connected', 'connection_verified', b'connection_verified', 'remote_control_connected', b'remote_control_connected', 'remote_control_connection_verified', b'remote_control_connection_verified']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['advantage_choice', b'advantage_choice', 'connected', b'connected', 'connection_verified', b'connection_verified', 'remote_control_connected', b'remote_control_connected', 'remote_control_connection_verified', b'remote_control_connection_verified']) -> None:
        ...
global___GcStateTeam = GcStateTeam

@typing.final
class TeamAdvantageChoice(google.protobuf.message.Message):
    """The choice from a team regarding the advantage rule"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _AdvantageChoice:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _AdvantageChoiceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TeamAdvantageChoice._AdvantageChoice.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STOP: TeamAdvantageChoice._AdvantageChoice.ValueType
        'stop the game'
        CONTINUE: TeamAdvantageChoice._AdvantageChoice.ValueType
        'keep the match running'

    class AdvantageChoice(_AdvantageChoice, metaclass=_AdvantageChoiceEnumTypeWrapper):
        """possible advantage choices"""
    STOP: TeamAdvantageChoice.AdvantageChoice.ValueType
    'stop the game'
    CONTINUE: TeamAdvantageChoice.AdvantageChoice.ValueType
    'keep the match running'
    CHOICE_FIELD_NUMBER: builtins.int
    choice: global___TeamAdvantageChoice.AdvantageChoice.ValueType
    'the choice of the team'

    def __init__(self, *, choice: global___TeamAdvantageChoice.AdvantageChoice.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['choice', b'choice']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['choice', b'choice']) -> None:
        ...
global___TeamAdvantageChoice = TeamAdvantageChoice

@typing.final
class GcStateAutoRef(google.protobuf.message.Message):
    """The GC state of an auto referee"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONNECTION_VERIFIED_FIELD_NUMBER: builtins.int
    connection_verified: builtins.bool
    'true: The autoRef connected via TLS with a verified certificate'

    def __init__(self, *, connection_verified: builtins.bool | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['connection_verified', b'connection_verified']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['connection_verified', b'connection_verified']) -> None:
        ...
global___GcStateAutoRef = GcStateAutoRef

@typing.final
class GcStateTracker(google.protobuf.message.Message):
    """GC state of a tracker"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SOURCE_NAME_FIELD_NUMBER: builtins.int
    UUID_FIELD_NUMBER: builtins.int
    BALL_FIELD_NUMBER: builtins.int
    ROBOTS_FIELD_NUMBER: builtins.int
    source_name: builtins.str
    'Name of the source'
    uuid: builtins.str
    'UUID of the source'

    @property
    def ball(self) -> global___Ball:
        """Current ball"""

    @property
    def robots(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]:
        """Current robots"""

    def __init__(self, *, source_name: builtins.str | None=..., uuid: builtins.str | None=..., ball: global___Ball | None=..., robots: collections.abc.Iterable[global___Robot] | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['ball', b'ball', 'source_name', b'source_name', 'uuid', b'uuid']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['ball', b'ball', 'robots', b'robots', 'source_name', b'source_name', 'uuid', b'uuid']) -> None:
        ...
global___GcStateTracker = GcStateTracker

@typing.final
class Ball(google.protobuf.message.Message):
    """The ball state"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    POS_FIELD_NUMBER: builtins.int
    VEL_FIELD_NUMBER: builtins.int

    @property
    def pos(self) -> geom.ssl_gc_geometry_pb2.Vector3:
        """ball position [m]"""

    @property
    def vel(self) -> geom.ssl_gc_geometry_pb2.Vector3:
        """ball velocity [m/s]"""

    def __init__(self, *, pos: geom.ssl_gc_geometry_pb2.Vector3 | None=..., vel: geom.ssl_gc_geometry_pb2.Vector3 | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['pos', b'pos', 'vel', b'vel']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['pos', b'pos', 'vel', b'vel']) -> None:
        ...
global___Ball = Ball

@typing.final
class Robot(google.protobuf.message.Message):
    """The robot state"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    POS_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> state.ssl_gc_common_pb2.RobotId:
        """robot id and team"""

    @property
    def pos(self) -> geom.ssl_gc_geometry_pb2.Vector2:
        """robot position [m]"""

    def __init__(self, *, id: state.ssl_gc_common_pb2.RobotId | None=..., pos: geom.ssl_gc_geometry_pb2.Vector2 | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['id', b'id', 'pos', b'pos']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['id', b'id', 'pos', b'pos']) -> None:
        ...
global___Robot = Robot

@typing.final
class ContinueAction(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ContinueAction._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNKNOWN: ContinueAction._Type.ValueType
        HALT: ContinueAction._Type.ValueType
        RESUME_FROM_HALT: ContinueAction._Type.ValueType
        STOP_GAME: ContinueAction._Type.ValueType
        FORCE_START: ContinueAction._Type.ValueType
        FREE_KICK: ContinueAction._Type.ValueType
        NEXT_COMMAND: ContinueAction._Type.ValueType
        BALL_PLACEMENT_START: ContinueAction._Type.ValueType
        BALL_PLACEMENT_CANCEL: ContinueAction._Type.ValueType
        BALL_PLACEMENT_COMPLETE: ContinueAction._Type.ValueType
        BALL_PLACEMENT_FAIL: ContinueAction._Type.ValueType
        TIMEOUT_START: ContinueAction._Type.ValueType
        TIMEOUT_STOP: ContinueAction._Type.ValueType
        BOT_SUBSTITUTION: ContinueAction._Type.ValueType
        NEXT_STAGE: ContinueAction._Type.ValueType
        END_GAME: ContinueAction._Type.ValueType
        ACCEPT_GOAL: ContinueAction._Type.ValueType
        REJECT_GOAL: ContinueAction._Type.ValueType
        NORMAL_START: ContinueAction._Type.ValueType
        CHALLENGE_ACCEPT: ContinueAction._Type.ValueType
        CHALLENGE_REJECT: ContinueAction._Type.ValueType

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        ...
    TYPE_UNKNOWN: ContinueAction.Type.ValueType
    HALT: ContinueAction.Type.ValueType
    RESUME_FROM_HALT: ContinueAction.Type.ValueType
    STOP_GAME: ContinueAction.Type.ValueType
    FORCE_START: ContinueAction.Type.ValueType
    FREE_KICK: ContinueAction.Type.ValueType
    NEXT_COMMAND: ContinueAction.Type.ValueType
    BALL_PLACEMENT_START: ContinueAction.Type.ValueType
    BALL_PLACEMENT_CANCEL: ContinueAction.Type.ValueType
    BALL_PLACEMENT_COMPLETE: ContinueAction.Type.ValueType
    BALL_PLACEMENT_FAIL: ContinueAction.Type.ValueType
    TIMEOUT_START: ContinueAction.Type.ValueType
    TIMEOUT_STOP: ContinueAction.Type.ValueType
    BOT_SUBSTITUTION: ContinueAction.Type.ValueType
    NEXT_STAGE: ContinueAction.Type.ValueType
    END_GAME: ContinueAction.Type.ValueType
    ACCEPT_GOAL: ContinueAction.Type.ValueType
    REJECT_GOAL: ContinueAction.Type.ValueType
    NORMAL_START: ContinueAction.Type.ValueType
    CHALLENGE_ACCEPT: ContinueAction.Type.ValueType
    CHALLENGE_REJECT: ContinueAction.Type.ValueType

    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ContinueAction._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNKNOWN: ContinueAction._State.ValueType
        BLOCKED: ContinueAction._State.ValueType
        WAITING: ContinueAction._State.ValueType
        READY_AUTO: ContinueAction._State.ValueType
        READY_MANUAL: ContinueAction._State.ValueType
        DISABLED: ContinueAction._State.ValueType

    class State(_State, metaclass=_StateEnumTypeWrapper):
        ...
    STATE_UNKNOWN: ContinueAction.State.ValueType
    BLOCKED: ContinueAction.State.ValueType
    WAITING: ContinueAction.State.ValueType
    READY_AUTO: ContinueAction.State.ValueType
    READY_MANUAL: ContinueAction.State.ValueType
    DISABLED: ContinueAction.State.ValueType
    TYPE_FIELD_NUMBER: builtins.int
    FOR_TEAM_FIELD_NUMBER: builtins.int
    CONTINUATION_ISSUES_FIELD_NUMBER: builtins.int
    READY_AT_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    type: global___ContinueAction.Type.ValueType
    'type of action that will be performed next'
    for_team: state.ssl_gc_common_pb2.Team.ValueType
    'for which team (if team specific)'
    state: global___ContinueAction.State.ValueType
    'state of the action'

    @property
    def continuation_issues(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """list of issues that hinders the game from continuing"""

    @property
    def ready_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """timestamp at which the action will be ready (to give some preparation time)"""

    def __init__(self, *, type: global___ContinueAction.Type.ValueType | None=..., for_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., continuation_issues: collections.abc.Iterable[builtins.str] | None=..., ready_at: google.protobuf.timestamp_pb2.Timestamp | None=..., state: global___ContinueAction.State.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['for_team', b'for_team', 'ready_at', b'ready_at', 'state', b'state', 'type', b'type']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['continuation_issues', b'continuation_issues', 'for_team', b'for_team', 'ready_at', b'ready_at', 'state', b'state', 'type', b'type']) -> None:
        ...
global___ContinueAction = ContinueAction

@typing.final
class ContinueHint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MESSAGE_FIELD_NUMBER: builtins.int
    message: builtins.str

    def __init__(self, *, message: builtins.str | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['message', b'message']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['message', b'message']) -> None:
        ...
global___ContinueHint = ContinueHint