"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
from .. import tracker
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TrackerWrapperPacket(google.protobuf.message.Message):
    """A wrapper packet containing meta data of the source
    Also serves for the possibility to extend the protocol later
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UUID_FIELD_NUMBER: builtins.int
    SOURCE_NAME_FIELD_NUMBER: builtins.int
    TRACKED_FRAME_FIELD_NUMBER: builtins.int
    uuid: builtins.str
    'A random UUID of the source that is kept constant at the source while running\n    If multiple sources are broadcasting to the same network, this id can be used to identify individual sources\n    '
    source_name: builtins.str
    'The name of the source software that is producing this messages.'

    @property
    def tracked_frame(self) -> tracker.ssl_vision_detection_tracked_pb2.TrackedFrame:
        """The tracked frame"""

    def __init__(self, *, uuid: builtins.str | None=..., source_name: builtins.str | None=..., tracked_frame: tracker.ssl_vision_detection_tracked_pb2.TrackedFrame | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['source_name', b'source_name', 'tracked_frame', b'tracked_frame', 'uuid', b'uuid']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['source_name', b'source_name', 'tracked_frame', b'tracked_frame', 'uuid', b'uuid']) -> None:
        ...
global___TrackerWrapperPacket = TrackerWrapperPacket