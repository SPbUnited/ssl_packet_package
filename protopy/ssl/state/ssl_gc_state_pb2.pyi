"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
from .. import geom
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
from .. import state
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class YellowCard(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
    TIME_REMAINING_FIELD_NUMBER: builtins.int
    id: builtins.int

    @property
    def caused_by_game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
        ...

    @property
    def time_remaining(self) -> google.protobuf.duration_pb2.Duration:
        ...

    def __init__(self, *, id: builtins.int | None=..., caused_by_game_event: state.ssl_gc_game_event_pb2.GameEvent | None=..., time_remaining: google.protobuf.duration_pb2.Duration | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'id', b'id', 'time_remaining', b'time_remaining']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'id', b'id', 'time_remaining', b'time_remaining']) -> None:
        ...
global___YellowCard = YellowCard

@typing.final
class RedCard(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
    id: builtins.int

    @property
    def caused_by_game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
        ...

    def __init__(self, *, id: builtins.int | None=..., caused_by_game_event: state.ssl_gc_game_event_pb2.GameEvent | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'id', b'id']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'id', b'id']) -> None:
        ...
global___RedCard = RedCard

@typing.final
class Foul(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    id: builtins.int

    @property
    def caused_by_game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
        ...

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    def __init__(self, *, id: builtins.int | None=..., caused_by_game_event: state.ssl_gc_game_event_pb2.GameEvent | None=..., timestamp: google.protobuf.timestamp_pb2.Timestamp | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'id', b'id', 'timestamp', b'timestamp']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'id', b'id', 'timestamp', b'timestamp']) -> None:
        ...
global___Foul = Foul

@typing.final
class Command(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Command._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Command._Type.ValueType
        HALT: Command._Type.ValueType
        STOP: Command._Type.ValueType
        NORMAL_START: Command._Type.ValueType
        FORCE_START: Command._Type.ValueType
        DIRECT: Command._Type.ValueType
        KICKOFF: Command._Type.ValueType
        PENALTY: Command._Type.ValueType
        TIMEOUT: Command._Type.ValueType
        BALL_PLACEMENT: Command._Type.ValueType

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        ...
    UNKNOWN: Command.Type.ValueType
    HALT: Command.Type.ValueType
    STOP: Command.Type.ValueType
    NORMAL_START: Command.Type.ValueType
    FORCE_START: Command.Type.ValueType
    DIRECT: Command.Type.ValueType
    KICKOFF: Command.Type.ValueType
    PENALTY: Command.Type.ValueType
    TIMEOUT: Command.Type.ValueType
    BALL_PLACEMENT: Command.Type.ValueType
    TYPE_FIELD_NUMBER: builtins.int
    FOR_TEAM_FIELD_NUMBER: builtins.int
    type: global___Command.Type.ValueType
    for_team: state.ssl_gc_common_pb2.Team.ValueType

    def __init__(self, *, type: global___Command.Type.ValueType | None=..., for_team: state.ssl_gc_common_pb2.Team.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['for_team', b'for_team', 'type', b'type']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['for_team', b'for_team', 'type', b'type']) -> None:
        ...
global___Command = Command

@typing.final
class GameState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GameState._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: GameState._Type.ValueType
        HALT: GameState._Type.ValueType
        STOP: GameState._Type.ValueType
        RUNNING: GameState._Type.ValueType
        FREE_KICK: GameState._Type.ValueType
        KICKOFF: GameState._Type.ValueType
        PENALTY: GameState._Type.ValueType
        TIMEOUT: GameState._Type.ValueType
        BALL_PLACEMENT: GameState._Type.ValueType

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        ...
    UNKNOWN: GameState.Type.ValueType
    HALT: GameState.Type.ValueType
    STOP: GameState.Type.ValueType
    RUNNING: GameState.Type.ValueType
    FREE_KICK: GameState.Type.ValueType
    KICKOFF: GameState.Type.ValueType
    PENALTY: GameState.Type.ValueType
    TIMEOUT: GameState.Type.ValueType
    BALL_PLACEMENT: GameState.Type.ValueType
    TYPE_FIELD_NUMBER: builtins.int
    FOR_TEAM_FIELD_NUMBER: builtins.int
    type: global___GameState.Type.ValueType
    for_team: state.ssl_gc_common_pb2.Team.ValueType

    def __init__(self, *, type: global___GameState.Type.ValueType | None=..., for_team: state.ssl_gc_common_pb2.Team.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['for_team', b'for_team', 'type', b'type']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['for_team', b'for_team', 'type', b'type']) -> None:
        ...
global___GameState = GameState

@typing.final
class Proposal(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMESTAMP_FIELD_NUMBER: builtins.int
    GAME_EVENT_FIELD_NUMBER: builtins.int

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the game event proposal occurred"""

    @property
    def game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
        """The proposed game event."""

    def __init__(self, *, timestamp: google.protobuf.timestamp_pb2.Timestamp | None=..., game_event: state.ssl_gc_game_event_pb2.GameEvent | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['game_event', b'game_event', 'timestamp', b'timestamp']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['game_event', b'game_event', 'timestamp', b'timestamp']) -> None:
        ...
global___Proposal = Proposal

@typing.final
class ProposalGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    PROPOSALS_FIELD_NUMBER: builtins.int
    ACCEPTED_FIELD_NUMBER: builtins.int
    id: builtins.str
    'Unique ID of this group'
    accepted: builtins.bool
    'Whether the proposal group was accepted'

    @property
    def proposals(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Proposal]:
        """The proposals in this group"""

    def __init__(self, *, id: builtins.str | None=..., proposals: collections.abc.Iterable[global___Proposal] | None=..., accepted: builtins.bool | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['accepted', b'accepted', 'id', b'id']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['accepted', b'accepted', 'id', b'id', 'proposals', b'proposals']) -> None:
        ...
global___ProposalGroup = ProposalGroup

@typing.final
class TeamInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    GOALS_FIELD_NUMBER: builtins.int
    GOALKEEPER_FIELD_NUMBER: builtins.int
    YELLOW_CARDS_FIELD_NUMBER: builtins.int
    RED_CARDS_FIELD_NUMBER: builtins.int
    TIMEOUTS_LEFT_FIELD_NUMBER: builtins.int
    TIMEOUT_TIME_LEFT_FIELD_NUMBER: builtins.int
    ON_POSITIVE_HALF_FIELD_NUMBER: builtins.int
    FOULS_FIELD_NUMBER: builtins.int
    BALL_PLACEMENT_FAILURES_FIELD_NUMBER: builtins.int
    BALL_PLACEMENT_FAILURES_REACHED_FIELD_NUMBER: builtins.int
    CAN_PLACE_BALL_FIELD_NUMBER: builtins.int
    MAX_ALLOWED_BOTS_FIELD_NUMBER: builtins.int
    REQUESTS_BOT_SUBSTITUTION_SINCE_FIELD_NUMBER: builtins.int
    REQUESTS_TIMEOUT_SINCE_FIELD_NUMBER: builtins.int
    REQUESTS_EMERGENCY_STOP_SINCE_FIELD_NUMBER: builtins.int
    CHALLENGE_FLAGS_FIELD_NUMBER: builtins.int
    BOT_SUBSTITUTION_ALLOWED_FIELD_NUMBER: builtins.int
    BOT_SUBSTITUTIONS_LEFT_FIELD_NUMBER: builtins.int
    BOT_SUBSTITUTION_TIME_LEFT_FIELD_NUMBER: builtins.int
    HULL_COLOR_FIELD_NUMBER: builtins.int
    name: builtins.str
    goals: builtins.int
    goalkeeper: builtins.int
    timeouts_left: builtins.int
    on_positive_half: builtins.bool
    ball_placement_failures: builtins.int
    ball_placement_failures_reached: builtins.bool
    can_place_ball: builtins.bool
    max_allowed_bots: builtins.int
    challenge_flags: builtins.int
    bot_substitution_allowed: builtins.bool
    bot_substitutions_left: builtins.int
    hull_color: state.ssl_gc_referee_message_pb2.HullColor.ValueType

    @property
    def yellow_cards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___YellowCard]:
        ...

    @property
    def red_cards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RedCard]:
        ...

    @property
    def timeout_time_left(self) -> google.protobuf.duration_pb2.Duration:
        ...

    @property
    def fouls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Foul]:
        ...

    @property
    def requests_bot_substitution_since(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def requests_timeout_since(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def requests_emergency_stop_since(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def bot_substitution_time_left(self) -> google.protobuf.duration_pb2.Duration:
        ...

    def __init__(self, *, name: builtins.str | None=..., goals: builtins.int | None=..., goalkeeper: builtins.int | None=..., yellow_cards: collections.abc.Iterable[global___YellowCard] | None=..., red_cards: collections.abc.Iterable[global___RedCard] | None=..., timeouts_left: builtins.int | None=..., timeout_time_left: google.protobuf.duration_pb2.Duration | None=..., on_positive_half: builtins.bool | None=..., fouls: collections.abc.Iterable[global___Foul] | None=..., ball_placement_failures: builtins.int | None=..., ball_placement_failures_reached: builtins.bool | None=..., can_place_ball: builtins.bool | None=..., max_allowed_bots: builtins.int | None=..., requests_bot_substitution_since: google.protobuf.timestamp_pb2.Timestamp | None=..., requests_timeout_since: google.protobuf.timestamp_pb2.Timestamp | None=..., requests_emergency_stop_since: google.protobuf.timestamp_pb2.Timestamp | None=..., challenge_flags: builtins.int | None=..., bot_substitution_allowed: builtins.bool | None=..., bot_substitutions_left: builtins.int | None=..., bot_substitution_time_left: google.protobuf.duration_pb2.Duration | None=..., hull_color: state.ssl_gc_referee_message_pb2.HullColor.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['ball_placement_failures', b'ball_placement_failures', 'ball_placement_failures_reached', b'ball_placement_failures_reached', 'bot_substitution_allowed', b'bot_substitution_allowed', 'bot_substitution_time_left', b'bot_substitution_time_left', 'bot_substitutions_left', b'bot_substitutions_left', 'can_place_ball', b'can_place_ball', 'challenge_flags', b'challenge_flags', 'goalkeeper', b'goalkeeper', 'goals', b'goals', 'hull_color', b'hull_color', 'max_allowed_bots', b'max_allowed_bots', 'name', b'name', 'on_positive_half', b'on_positive_half', 'requests_bot_substitution_since', b'requests_bot_substitution_since', 'requests_emergency_stop_since', b'requests_emergency_stop_since', 'requests_timeout_since', b'requests_timeout_since', 'timeout_time_left', b'timeout_time_left', 'timeouts_left', b'timeouts_left']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['ball_placement_failures', b'ball_placement_failures', 'ball_placement_failures_reached', b'ball_placement_failures_reached', 'bot_substitution_allowed', b'bot_substitution_allowed', 'bot_substitution_time_left', b'bot_substitution_time_left', 'bot_substitutions_left', b'bot_substitutions_left', 'can_place_ball', b'can_place_ball', 'challenge_flags', b'challenge_flags', 'fouls', b'fouls', 'goalkeeper', b'goalkeeper', 'goals', b'goals', 'hull_color', b'hull_color', 'max_allowed_bots', b'max_allowed_bots', 'name', b'name', 'on_positive_half', b'on_positive_half', 'red_cards', b'red_cards', 'requests_bot_substitution_since', b'requests_bot_substitution_since', 'requests_emergency_stop_since', b'requests_emergency_stop_since', 'requests_timeout_since', b'requests_timeout_since', 'timeout_time_left', b'timeout_time_left', 'timeouts_left', b'timeouts_left', 'yellow_cards', b'yellow_cards']) -> None:
        ...
global___TeamInfo = TeamInfo

@typing.final
class State(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class TeamStateEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> global___TeamInfo:
            ...

        def __init__(self, *, key: builtins.str | None=..., value: global___TeamInfo | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    STAGE_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    GAME_STATE_FIELD_NUMBER: builtins.int
    STAGE_TIME_ELAPSED_FIELD_NUMBER: builtins.int
    STAGE_TIME_LEFT_FIELD_NUMBER: builtins.int
    MATCH_TIME_START_FIELD_NUMBER: builtins.int
    TEAM_STATE_FIELD_NUMBER: builtins.int
    PLACEMENT_POS_FIELD_NUMBER: builtins.int
    NEXT_COMMAND_FIELD_NUMBER: builtins.int
    CURRENT_ACTION_TIME_REMAINING_FIELD_NUMBER: builtins.int
    GAME_EVENTS_FIELD_NUMBER: builtins.int
    PROPOSAL_GROUPS_FIELD_NUMBER: builtins.int
    DIVISION_FIELD_NUMBER: builtins.int
    FIRST_KICKOFF_TEAM_FIELD_NUMBER: builtins.int
    MATCH_TYPE_FIELD_NUMBER: builtins.int
    READY_CONTINUE_TIME_FIELD_NUMBER: builtins.int
    SHOOTOUT_STATE_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    MAX_BOTS_PER_TEAM_FIELD_NUMBER: builtins.int
    stage: state.ssl_gc_referee_message_pb2.Referee.Stage.ValueType
    division: state.ssl_gc_common_pb2.Division.ValueType
    first_kickoff_team: state.ssl_gc_common_pb2.Team.ValueType
    match_type: state.ssl_gc_referee_message_pb2.MatchType.ValueType
    status_message: builtins.str
    max_bots_per_team: builtins.int
    'The maximum number of bots per team (overwrites the division config)'

    @property
    def command(self) -> global___Command:
        ...

    @property
    def game_state(self) -> global___GameState:
        ...

    @property
    def stage_time_elapsed(self) -> google.protobuf.duration_pb2.Duration:
        ...

    @property
    def stage_time_left(self) -> google.protobuf.duration_pb2.Duration:
        ...

    @property
    def match_time_start(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def team_state(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___TeamInfo]:
        ...

    @property
    def placement_pos(self) -> geom.ssl_gc_geometry_pb2.Vector2:
        ...

    @property
    def next_command(self) -> global___Command:
        ...

    @property
    def current_action_time_remaining(self) -> google.protobuf.duration_pb2.Duration:
        ...

    @property
    def game_events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[state.ssl_gc_game_event_pb2.GameEvent]:
        ...

    @property
    def proposal_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProposalGroup]:
        ...

    @property
    def ready_continue_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def shootout_state(self) -> global___ShootoutState:
        ...

    def __init__(self, *, stage: state.ssl_gc_referee_message_pb2.Referee.Stage.ValueType | None=..., command: global___Command | None=..., game_state: global___GameState | None=..., stage_time_elapsed: google.protobuf.duration_pb2.Duration | None=..., stage_time_left: google.protobuf.duration_pb2.Duration | None=..., match_time_start: google.protobuf.timestamp_pb2.Timestamp | None=..., team_state: collections.abc.Mapping[builtins.str, global___TeamInfo] | None=..., placement_pos: geom.ssl_gc_geometry_pb2.Vector2 | None=..., next_command: global___Command | None=..., current_action_time_remaining: google.protobuf.duration_pb2.Duration | None=..., game_events: collections.abc.Iterable[state.ssl_gc_game_event_pb2.GameEvent] | None=..., proposal_groups: collections.abc.Iterable[global___ProposalGroup] | None=..., division: state.ssl_gc_common_pb2.Division.ValueType | None=..., first_kickoff_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., match_type: state.ssl_gc_referee_message_pb2.MatchType.ValueType | None=..., ready_continue_time: google.protobuf.timestamp_pb2.Timestamp | None=..., shootout_state: global___ShootoutState | None=..., status_message: builtins.str | None=..., max_bots_per_team: builtins.int | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['command', b'command', 'current_action_time_remaining', b'current_action_time_remaining', 'division', b'division', 'first_kickoff_team', b'first_kickoff_team', 'game_state', b'game_state', 'match_time_start', b'match_time_start', 'match_type', b'match_type', 'max_bots_per_team', b'max_bots_per_team', 'next_command', b'next_command', 'placement_pos', b'placement_pos', 'ready_continue_time', b'ready_continue_time', 'shootout_state', b'shootout_state', 'stage', b'stage', 'stage_time_elapsed', b'stage_time_elapsed', 'stage_time_left', b'stage_time_left', 'status_message', b'status_message']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['command', b'command', 'current_action_time_remaining', b'current_action_time_remaining', 'division', b'division', 'first_kickoff_team', b'first_kickoff_team', 'game_events', b'game_events', 'game_state', b'game_state', 'match_time_start', b'match_time_start', 'match_type', b'match_type', 'max_bots_per_team', b'max_bots_per_team', 'next_command', b'next_command', 'placement_pos', b'placement_pos', 'proposal_groups', b'proposal_groups', 'ready_continue_time', b'ready_continue_time', 'shootout_state', b'shootout_state', 'stage', b'stage', 'stage_time_elapsed', b'stage_time_elapsed', 'stage_time_left', b'stage_time_left', 'status_message', b'status_message', 'team_state', b'team_state']) -> None:
        ...
global___State = State

@typing.final
class ShootoutState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class NumberOfAttemptsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int

        def __init__(self, *, key: builtins.str | None=..., value: builtins.int | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    NEXT_TEAM_FIELD_NUMBER: builtins.int
    NUMBER_OF_ATTEMPTS_FIELD_NUMBER: builtins.int
    next_team: state.ssl_gc_common_pb2.Team.ValueType

    @property
    def number_of_attempts(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]:
        ...

    def __init__(self, *, next_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., number_of_attempts: collections.abc.Mapping[builtins.str, builtins.int] | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['next_team', b'next_team']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['next_team', b'next_team', 'number_of_attempts', b'number_of_attempts']) -> None:
        ...
global___ShootoutState = ShootoutState