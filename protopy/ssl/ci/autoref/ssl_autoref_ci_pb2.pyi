"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
from ... import state
from ... import tracker
import typing
from ... import vision
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AutoRefCiInput(google.protobuf.message.Message):
    """The AutoRefCiInput contains all packets/messages that would otherwise be received through multicast by the auto-referee
    It may contain either a raw or a tracked SSL-vision packet. If both are given, the implementation may choose either one.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REFEREE_MESSAGE_FIELD_NUMBER: builtins.int
    TRACKER_WRAPPER_PACKET_FIELD_NUMBER: builtins.int
    DETECTION_FIELD_NUMBER: builtins.int
    GEOMETRY_FIELD_NUMBER: builtins.int

    @property
    def referee_message(self) -> state.ssl_gc_referee_message_pb2.Referee:
        """Latest referee message"""

    @property
    def tracker_wrapper_packet(self) -> tracker.ssl_vision_wrapper_tracked_pb2.TrackerWrapperPacket:
        """A tracked SSL-Vision packet to be processed without filtering"""

    @property
    def detection(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[vision.ssl_vision_detection_pb2.SSL_DetectionFrame]:
        """A list of unfiltered SSL-Vision packets (for multiple cameras) to be filtered and processed"""

    @property
    def geometry(self) -> vision.ssl_vision_geometry_pb2.SSL_GeometryData:
        """Current geometry data, to be sent at least once at the beginning of the connection"""

    def __init__(self, *, referee_message: state.ssl_gc_referee_message_pb2.Referee | None=..., tracker_wrapper_packet: tracker.ssl_vision_wrapper_tracked_pb2.TrackerWrapperPacket | None=..., detection: collections.abc.Iterable[vision.ssl_vision_detection_pb2.SSL_DetectionFrame] | None=..., geometry: vision.ssl_vision_geometry_pb2.SSL_GeometryData | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['geometry', b'geometry', 'referee_message', b'referee_message', 'tracker_wrapper_packet', b'tracker_wrapper_packet']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['detection', b'detection', 'geometry', b'geometry', 'referee_message', b'referee_message', 'tracker_wrapper_packet', b'tracker_wrapper_packet']) -> None:
        ...
global___AutoRefCiInput = AutoRefCiInput

@typing.final
class AutoRefCiOutput(google.protobuf.message.Message):
    """The AutoRefCiOutput contains any new data created by the auto-referee for further processing"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRACKER_WRAPPER_PACKET_FIELD_NUMBER: builtins.int

    @property
    def tracker_wrapper_packet(self) -> tracker.ssl_vision_wrapper_tracked_pb2.TrackerWrapperPacket:
        """A resulting tracked SSL-Vision packet for input into the ssl-game-controller.
        The auto-referee will either generate it from the unfiltered SSL-Vision packets
        or simply return the tracked packet from the input.
        """

    def __init__(self, *, tracker_wrapper_packet: tracker.ssl_vision_wrapper_tracked_pb2.TrackerWrapperPacket | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['tracker_wrapper_packet', b'tracker_wrapper_packet']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['tracker_wrapper_packet', b'tracker_wrapper_packet']) -> None:
        ...
global___AutoRefCiOutput = AutoRefCiOutput