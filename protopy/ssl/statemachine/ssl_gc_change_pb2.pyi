"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from .. import geom
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
from .. import state
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class StateChange(google.protobuf.message.Message):
    """A state change"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    STATE_PRE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CHANGE_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    id: builtins.int
    'A unique increasing id'

    @property
    def state_pre(self) -> state.ssl_gc_state_pb2.State:
        """The previous state"""

    @property
    def state(self) -> state.ssl_gc_state_pb2.State:
        """The state after the change was applied"""

    @property
    def change(self) -> global___Change:
        """The change itself"""

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the change was triggered"""

    def __init__(self, *, id: builtins.int | None=..., state_pre: state.ssl_gc_state_pb2.State | None=..., state: state.ssl_gc_state_pb2.State | None=..., change: global___Change | None=..., timestamp: google.protobuf.timestamp_pb2.Timestamp | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['change', b'change', 'id', b'id', 'state', b'state', 'state_pre', b'state_pre', 'timestamp', b'timestamp']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['change', b'change', 'id', b'id', 'state', b'state', 'state_pre', b'state_pre', 'timestamp', b'timestamp']) -> None:
        ...
global___StateChange = StateChange

@typing.final
class Change(google.protobuf.message.Message):
    """A certain change"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class NewCommand(google.protobuf.message.Message):
        """New referee command"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        COMMAND_FIELD_NUMBER: builtins.int

        @property
        def command(self) -> state.ssl_gc_state_pb2.Command:
            """The command"""

        def __init__(self, *, command: state.ssl_gc_state_pb2.Command | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['command', b'command']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['command', b'command']) -> None:
            ...

    @typing.final
    class ChangeStage(google.protobuf.message.Message):
        """Switch to a new stage"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        NEW_STAGE_FIELD_NUMBER: builtins.int
        new_stage: state.ssl_gc_referee_message_pb2.Referee.Stage.ValueType
        'The new stage'

        def __init__(self, *, new_stage: state.ssl_gc_referee_message_pb2.Referee.Stage.ValueType | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['new_stage', b'new_stage']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['new_stage', b'new_stage']) -> None:
            ...

    @typing.final
    class SetBallPlacementPos(google.protobuf.message.Message):
        """Set the ball placement pos"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        POS_FIELD_NUMBER: builtins.int

        @property
        def pos(self) -> geom.ssl_gc_geometry_pb2.Vector2:
            """The position in [m]"""

        def __init__(self, *, pos: geom.ssl_gc_geometry_pb2.Vector2 | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['pos', b'pos']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['pos', b'pos']) -> None:
            ...

    @typing.final
    class AddYellowCard(google.protobuf.message.Message):
        """Add a new yellow card"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FOR_TEAM_FIELD_NUMBER: builtins.int
        CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
        for_team: state.ssl_gc_common_pb2.Team.ValueType
        'The team that the card is for'

        @property
        def caused_by_game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
            """The game event that caused the card"""

        def __init__(self, *, for_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., caused_by_game_event: state.ssl_gc_game_event_pb2.GameEvent | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'for_team', b'for_team']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'for_team', b'for_team']) -> None:
            ...

    @typing.final
    class AddRedCard(google.protobuf.message.Message):
        """Add a new red card"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FOR_TEAM_FIELD_NUMBER: builtins.int
        CAUSED_BY_GAME_EVENT_FIELD_NUMBER: builtins.int
        for_team: state.ssl_gc_common_pb2.Team.ValueType
        'The team that the card is for'

        @property
        def caused_by_game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
            """The game event that caused the card"""

        def __init__(self, *, for_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., caused_by_game_event: state.ssl_gc_game_event_pb2.GameEvent | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'for_team', b'for_team']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['caused_by_game_event', b'caused_by_game_event', 'for_team', b'for_team']) -> None:
            ...

    @typing.final
    class YellowCardOver(google.protobuf.message.Message):
        """Trigger when a yellow card timed out"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FOR_TEAM_FIELD_NUMBER: builtins.int
        for_team: state.ssl_gc_common_pb2.Team.ValueType
        'The team that the card was for'

        def __init__(self, *, for_team: state.ssl_gc_common_pb2.Team.ValueType | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['for_team', b'for_team']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['for_team', b'for_team']) -> None:
            ...

    @typing.final
    class AddGameEvent(google.protobuf.message.Message):
        """Add a new game event"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        GAME_EVENT_FIELD_NUMBER: builtins.int

        @property
        def game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
            """The game event"""

        def __init__(self, *, game_event: state.ssl_gc_game_event_pb2.GameEvent | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['game_event', b'game_event']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['game_event', b'game_event']) -> None:
            ...

    @typing.final
    class AddPassiveGameEvent(google.protobuf.message.Message):
        """Add a new passive game event (that is only logged, but does not automatically trigger anything)"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        GAME_EVENT_FIELD_NUMBER: builtins.int

        @property
        def game_event(self) -> state.ssl_gc_game_event_pb2.GameEvent:
            """The game event"""

        def __init__(self, *, game_event: state.ssl_gc_game_event_pb2.GameEvent | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['game_event', b'game_event']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['game_event', b'game_event']) -> None:
            ...

    @typing.final
    class AddProposal(google.protobuf.message.Message):
        """Add a new proposal (i.e. from an auto referee for majority voting)"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        PROPOSAL_FIELD_NUMBER: builtins.int

        @property
        def proposal(self) -> state.ssl_gc_state_pb2.Proposal:
            """The proposal"""

        def __init__(self, *, proposal: state.ssl_gc_state_pb2.Proposal | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['proposal', b'proposal']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['proposal', b'proposal']) -> None:
            ...

    @typing.final
    class AcceptProposalGroup(google.protobuf.message.Message):
        """Accept a proposal group (that contain one or more proposals of the same type)"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        GROUP_ID_FIELD_NUMBER: builtins.int
        ACCEPTED_BY_FIELD_NUMBER: builtins.int
        group_id: builtins.str
        'The id of the group'
        accepted_by: builtins.str
        'An identifier of the acceptor'

        def __init__(self, *, group_id: builtins.str | None=..., accepted_by: builtins.str | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['accepted_by', b'accepted_by', 'group_id', b'group_id']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['accepted_by', b'accepted_by', 'group_id', b'group_id']) -> None:
            ...

    @typing.final
    class UpdateConfig(google.protobuf.message.Message):
        """Update some configuration"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        DIVISION_FIELD_NUMBER: builtins.int
        FIRST_KICKOFF_TEAM_FIELD_NUMBER: builtins.int
        MATCH_TYPE_FIELD_NUMBER: builtins.int
        MAX_ROBOTS_PER_TEAM_FIELD_NUMBER: builtins.int
        division: state.ssl_gc_common_pb2.Division.ValueType
        'The division to play with'
        first_kickoff_team: state.ssl_gc_common_pb2.Team.ValueType
        'the team that does/did the first kick off'
        match_type: state.ssl_gc_referee_message_pb2.MatchType.ValueType
        'The match type'

        @property
        def max_robots_per_team(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """The number of robots per team"""

        def __init__(self, *, division: state.ssl_gc_common_pb2.Division.ValueType | None=..., first_kickoff_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., match_type: state.ssl_gc_referee_message_pb2.MatchType.ValueType | None=..., max_robots_per_team: google.protobuf.wrappers_pb2.Int32Value | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['division', b'division', 'first_kickoff_team', b'first_kickoff_team', 'match_type', b'match_type', 'max_robots_per_team', b'max_robots_per_team']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['division', b'division', 'first_kickoff_team', b'first_kickoff_team', 'match_type', b'match_type', 'max_robots_per_team', b'max_robots_per_team']) -> None:
            ...

    @typing.final
    class UpdateTeamState(google.protobuf.message.Message):
        """Update the current state of a team (all fields that should be updated are set)"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FOR_TEAM_FIELD_NUMBER: builtins.int
        TEAM_NAME_FIELD_NUMBER: builtins.int
        GOALS_FIELD_NUMBER: builtins.int
        GOALKEEPER_FIELD_NUMBER: builtins.int
        TIMEOUTS_LEFT_FIELD_NUMBER: builtins.int
        TIMEOUT_TIME_LEFT_FIELD_NUMBER: builtins.int
        ON_POSITIVE_HALF_FIELD_NUMBER: builtins.int
        BALL_PLACEMENT_FAILURES_FIELD_NUMBER: builtins.int
        CAN_PLACE_BALL_FIELD_NUMBER: builtins.int
        CHALLENGE_FLAGS_LEFT_FIELD_NUMBER: builtins.int
        BOT_SUBSTITUTIONS_LEFT_FIELD_NUMBER: builtins.int
        REQUESTS_BOT_SUBSTITUTION_FIELD_NUMBER: builtins.int
        REQUESTS_TIMEOUT_FIELD_NUMBER: builtins.int
        REQUESTS_CHALLENGE_FIELD_NUMBER: builtins.int
        REQUESTS_EMERGENCY_STOP_FIELD_NUMBER: builtins.int
        YELLOW_CARD_FIELD_NUMBER: builtins.int
        RED_CARD_FIELD_NUMBER: builtins.int
        FOUL_FIELD_NUMBER: builtins.int
        REMOVE_YELLOW_CARD_FIELD_NUMBER: builtins.int
        REMOVE_RED_CARD_FIELD_NUMBER: builtins.int
        REMOVE_FOUL_FIELD_NUMBER: builtins.int
        HULL_COLOR_FIELD_NUMBER: builtins.int
        for_team: state.ssl_gc_common_pb2.Team.ValueType
        'The team'
        hull_color: state.ssl_gc_referee_message_pb2.HullColor.ValueType
        'The color of the hull'

        @property
        def team_name(self) -> google.protobuf.wrappers_pb2.StringValue:
            """Change the name of the team"""

        @property
        def goals(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """Change the number of goals that the teams has at the moment"""

        @property
        def goalkeeper(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """The id of the goal keeper"""

        @property
        def timeouts_left(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """The number of timeouts that the team has left"""

        @property
        def timeout_time_left(self) -> google.protobuf.wrappers_pb2.StringValue:
            """The timeout time that the team has left"""

        @property
        def on_positive_half(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Does the team play on the positive or the negative half (in ssl-vision coordinates)?"""

        @property
        def ball_placement_failures(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """The number of ball placement failures"""

        @property
        def can_place_ball(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Can the team place the ball, or is ball placement for this team disabled and should be skipped?"""

        @property
        def challenge_flags_left(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """The number of challenge flags that the team has left"""

        @property
        def bot_substitutions_left(self) -> google.protobuf.wrappers_pb2.Int32Value:
            """The number of bot substitutions left by the team in this halftime"""

        @property
        def requests_bot_substitution(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Does the team want to substitute a robot in the next possible situation?"""

        @property
        def requests_timeout(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Does the team want to take a timeout in the next possible situation?"""

        @property
        def requests_challenge(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Does the team want to challenge a recent decision of the referee?"""

        @property
        def requests_emergency_stop(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Does the team want to request an emergency stop?"""

        @property
        def yellow_card(self) -> state.ssl_gc_state_pb2.YellowCard:
            """Update a certain yellow card of the team"""

        @property
        def red_card(self) -> state.ssl_gc_state_pb2.RedCard:
            """Update a certain red card of the team"""

        @property
        def foul(self) -> state.ssl_gc_state_pb2.Foul:
            """Update a certain foul of the team"""

        @property
        def remove_yellow_card(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """Remove the yellow card with this id"""

        @property
        def remove_red_card(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """Remove the red card with this id"""

        @property
        def remove_foul(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """Remove the foul with this id"""

        def __init__(self, *, for_team: state.ssl_gc_common_pb2.Team.ValueType | None=..., team_name: google.protobuf.wrappers_pb2.StringValue | None=..., goals: google.protobuf.wrappers_pb2.Int32Value | None=..., goalkeeper: google.protobuf.wrappers_pb2.Int32Value | None=..., timeouts_left: google.protobuf.wrappers_pb2.Int32Value | None=..., timeout_time_left: google.protobuf.wrappers_pb2.StringValue | None=..., on_positive_half: google.protobuf.wrappers_pb2.BoolValue | None=..., ball_placement_failures: google.protobuf.wrappers_pb2.Int32Value | None=..., can_place_ball: google.protobuf.wrappers_pb2.BoolValue | None=..., challenge_flags_left: google.protobuf.wrappers_pb2.Int32Value | None=..., bot_substitutions_left: google.protobuf.wrappers_pb2.Int32Value | None=..., requests_bot_substitution: google.protobuf.wrappers_pb2.BoolValue | None=..., requests_timeout: google.protobuf.wrappers_pb2.BoolValue | None=..., requests_challenge: google.protobuf.wrappers_pb2.BoolValue | None=..., requests_emergency_stop: google.protobuf.wrappers_pb2.BoolValue | None=..., yellow_card: state.ssl_gc_state_pb2.YellowCard | None=..., red_card: state.ssl_gc_state_pb2.RedCard | None=..., foul: state.ssl_gc_state_pb2.Foul | None=..., remove_yellow_card: google.protobuf.wrappers_pb2.UInt32Value | None=..., remove_red_card: google.protobuf.wrappers_pb2.UInt32Value | None=..., remove_foul: google.protobuf.wrappers_pb2.UInt32Value | None=..., hull_color: state.ssl_gc_referee_message_pb2.HullColor.ValueType | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['ball_placement_failures', b'ball_placement_failures', 'bot_substitutions_left', b'bot_substitutions_left', 'can_place_ball', b'can_place_ball', 'challenge_flags_left', b'challenge_flags_left', 'for_team', b'for_team', 'foul', b'foul', 'goalkeeper', b'goalkeeper', 'goals', b'goals', 'hull_color', b'hull_color', 'on_positive_half', b'on_positive_half', 'red_card', b'red_card', 'remove_foul', b'remove_foul', 'remove_red_card', b'remove_red_card', 'remove_yellow_card', b'remove_yellow_card', 'requests_bot_substitution', b'requests_bot_substitution', 'requests_challenge', b'requests_challenge', 'requests_emergency_stop', b'requests_emergency_stop', 'requests_timeout', b'requests_timeout', 'team_name', b'team_name', 'timeout_time_left', b'timeout_time_left', 'timeouts_left', b'timeouts_left', 'yellow_card', b'yellow_card']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['ball_placement_failures', b'ball_placement_failures', 'bot_substitutions_left', b'bot_substitutions_left', 'can_place_ball', b'can_place_ball', 'challenge_flags_left', b'challenge_flags_left', 'for_team', b'for_team', 'foul', b'foul', 'goalkeeper', b'goalkeeper', 'goals', b'goals', 'hull_color', b'hull_color', 'on_positive_half', b'on_positive_half', 'red_card', b'red_card', 'remove_foul', b'remove_foul', 'remove_red_card', b'remove_red_card', 'remove_yellow_card', b'remove_yellow_card', 'requests_bot_substitution', b'requests_bot_substitution', 'requests_challenge', b'requests_challenge', 'requests_emergency_stop', b'requests_emergency_stop', 'requests_timeout', b'requests_timeout', 'team_name', b'team_name', 'timeout_time_left', b'timeout_time_left', 'timeouts_left', b'timeouts_left', 'yellow_card', b'yellow_card']) -> None:
            ...

    @typing.final
    class SwitchColors(google.protobuf.message.Message):
        """Switch the team colors"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(self) -> None:
            ...

    @typing.final
    class Revert(google.protobuf.message.Message):
        """Revert a certain change"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        CHANGE_ID_FIELD_NUMBER: builtins.int
        change_id: builtins.int
        'The id of the change'

        def __init__(self, *, change_id: builtins.int | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['change_id', b'change_id']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['change_id', b'change_id']) -> None:
            ...

    @typing.final
    class NewGameState(google.protobuf.message.Message):
        """Change the current game state"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        GAME_STATE_FIELD_NUMBER: builtins.int

        @property
        def game_state(self) -> state.ssl_gc_state_pb2.GameState:
            """The new game state"""

        def __init__(self, *, game_state: state.ssl_gc_state_pb2.GameState | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['game_state', b'game_state']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['game_state', b'game_state']) -> None:
            ...

    @typing.final
    class SetStatusMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        STATUS_MESSAGE_FIELD_NUMBER: builtins.int
        status_message: builtins.str
        'The new status message'

        def __init__(self, *, status_message: builtins.str | None=...) -> None:
            ...

        def HasField(self, field_name: typing.Literal['status_message', b'status_message']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing.Literal['status_message', b'status_message']) -> None:
            ...
    ORIGIN_FIELD_NUMBER: builtins.int
    REVERTIBLE_FIELD_NUMBER: builtins.int
    NEW_COMMAND_CHANGE_FIELD_NUMBER: builtins.int
    CHANGE_STAGE_CHANGE_FIELD_NUMBER: builtins.int
    SET_BALL_PLACEMENT_POS_CHANGE_FIELD_NUMBER: builtins.int
    ADD_YELLOW_CARD_CHANGE_FIELD_NUMBER: builtins.int
    ADD_RED_CARD_CHANGE_FIELD_NUMBER: builtins.int
    YELLOW_CARD_OVER_CHANGE_FIELD_NUMBER: builtins.int
    ADD_GAME_EVENT_CHANGE_FIELD_NUMBER: builtins.int
    ADD_PASSIVE_GAME_EVENT_CHANGE_FIELD_NUMBER: builtins.int
    ADD_PROPOSAL_CHANGE_FIELD_NUMBER: builtins.int
    UPDATE_CONFIG_CHANGE_FIELD_NUMBER: builtins.int
    UPDATE_TEAM_STATE_CHANGE_FIELD_NUMBER: builtins.int
    SWITCH_COLORS_CHANGE_FIELD_NUMBER: builtins.int
    REVERT_CHANGE_FIELD_NUMBER: builtins.int
    NEW_GAME_STATE_CHANGE_FIELD_NUMBER: builtins.int
    ACCEPT_PROPOSAL_GROUP_CHANGE_FIELD_NUMBER: builtins.int
    SET_STATUS_MESSAGE_CHANGE_FIELD_NUMBER: builtins.int
    origin: builtins.str
    'An identifier of the origin that triggered the change'
    revertible: builtins.bool
    'Is this change revertible?'

    @property
    def new_command_change(self) -> global___Change.NewCommand:
        ...

    @property
    def change_stage_change(self) -> global___Change.ChangeStage:
        ...

    @property
    def set_ball_placement_pos_change(self) -> global___Change.SetBallPlacementPos:
        ...

    @property
    def add_yellow_card_change(self) -> global___Change.AddYellowCard:
        ...

    @property
    def add_red_card_change(self) -> global___Change.AddRedCard:
        ...

    @property
    def yellow_card_over_change(self) -> global___Change.YellowCardOver:
        ...

    @property
    def add_game_event_change(self) -> global___Change.AddGameEvent:
        ...

    @property
    def add_passive_game_event_change(self) -> global___Change.AddPassiveGameEvent:
        ...

    @property
    def add_proposal_change(self) -> global___Change.AddProposal:
        ...

    @property
    def update_config_change(self) -> global___Change.UpdateConfig:
        ...

    @property
    def update_team_state_change(self) -> global___Change.UpdateTeamState:
        ...

    @property
    def switch_colors_change(self) -> global___Change.SwitchColors:
        ...

    @property
    def revert_change(self) -> global___Change.Revert:
        ...

    @property
    def new_game_state_change(self) -> global___Change.NewGameState:
        ...

    @property
    def accept_proposal_group_change(self) -> global___Change.AcceptProposalGroup:
        ...

    @property
    def set_status_message_change(self) -> global___Change.SetStatusMessage:
        ...

    def __init__(self, *, origin: builtins.str | None=..., revertible: builtins.bool | None=..., new_command_change: global___Change.NewCommand | None=..., change_stage_change: global___Change.ChangeStage | None=..., set_ball_placement_pos_change: global___Change.SetBallPlacementPos | None=..., add_yellow_card_change: global___Change.AddYellowCard | None=..., add_red_card_change: global___Change.AddRedCard | None=..., yellow_card_over_change: global___Change.YellowCardOver | None=..., add_game_event_change: global___Change.AddGameEvent | None=..., add_passive_game_event_change: global___Change.AddPassiveGameEvent | None=..., add_proposal_change: global___Change.AddProposal | None=..., update_config_change: global___Change.UpdateConfig | None=..., update_team_state_change: global___Change.UpdateTeamState | None=..., switch_colors_change: global___Change.SwitchColors | None=..., revert_change: global___Change.Revert | None=..., new_game_state_change: global___Change.NewGameState | None=..., accept_proposal_group_change: global___Change.AcceptProposalGroup | None=..., set_status_message_change: global___Change.SetStatusMessage | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['accept_proposal_group_change', b'accept_proposal_group_change', 'add_game_event_change', b'add_game_event_change', 'add_passive_game_event_change', b'add_passive_game_event_change', 'add_proposal_change', b'add_proposal_change', 'add_red_card_change', b'add_red_card_change', 'add_yellow_card_change', b'add_yellow_card_change', 'change', b'change', 'change_stage_change', b'change_stage_change', 'new_command_change', b'new_command_change', 'new_game_state_change', b'new_game_state_change', 'origin', b'origin', 'revert_change', b'revert_change', 'revertible', b'revertible', 'set_ball_placement_pos_change', b'set_ball_placement_pos_change', 'set_status_message_change', b'set_status_message_change', 'switch_colors_change', b'switch_colors_change', 'update_config_change', b'update_config_change', 'update_team_state_change', b'update_team_state_change', 'yellow_card_over_change', b'yellow_card_over_change']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['accept_proposal_group_change', b'accept_proposal_group_change', 'add_game_event_change', b'add_game_event_change', 'add_passive_game_event_change', b'add_passive_game_event_change', 'add_proposal_change', b'add_proposal_change', 'add_red_card_change', b'add_red_card_change', 'add_yellow_card_change', b'add_yellow_card_change', 'change', b'change', 'change_stage_change', b'change_stage_change', 'new_command_change', b'new_command_change', 'new_game_state_change', b'new_game_state_change', 'origin', b'origin', 'revert_change', b'revert_change', 'revertible', b'revertible', 'set_ball_placement_pos_change', b'set_ball_placement_pos_change', 'set_status_message_change', b'set_status_message_change', 'switch_colors_change', b'switch_colors_change', 'update_config_change', b'update_config_change', 'update_team_state_change', b'update_team_state_change', 'yellow_card_over_change', b'yellow_card_over_change']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing.Literal['change', b'change']) -> typing.Literal['new_command_change', 'change_stage_change', 'set_ball_placement_pos_change', 'add_yellow_card_change', 'add_red_card_change', 'yellow_card_over_change', 'add_game_event_change', 'add_passive_game_event_change', 'add_proposal_change', 'update_config_change', 'update_team_state_change', 'switch_colors_change', 'revert_change', 'new_game_state_change', 'accept_proposal_group_change', 'set_status_message_change'] | None:
        ...
global___Change = Change